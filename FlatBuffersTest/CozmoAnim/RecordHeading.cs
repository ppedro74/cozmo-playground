// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CozmoAnim
{

using global::System;
using global::FlatBuffers;

public struct RecordHeading : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static RecordHeading GetRootAsRecordHeading(ByteBuffer _bb) { return GetRootAsRecordHeading(_bb, new RecordHeading()); }
  public static RecordHeading GetRootAsRecordHeading(ByteBuffer _bb, RecordHeading obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RecordHeading __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TriggerTimeMs { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CozmoAnim.RecordHeading> CreateRecordHeading(FlatBufferBuilder builder,
      uint triggerTime_ms = 0) {
    builder.StartTable(1);
    RecordHeading.AddTriggerTimeMs(builder, triggerTime_ms);
    return RecordHeading.EndRecordHeading(builder);
  }

  public static void StartRecordHeading(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTriggerTimeMs(FlatBufferBuilder builder, uint triggerTimeMs) { builder.AddUint(0, triggerTimeMs, 0); }
  public static Offset<CozmoAnim.RecordHeading> EndRecordHeading(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CozmoAnim.RecordHeading>(o);
  }
};


}
