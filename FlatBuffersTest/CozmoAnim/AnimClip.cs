// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CozmoAnim
{

using global::System;
using global::FlatBuffers;

public struct AnimClip : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static AnimClip GetRootAsAnimClip(ByteBuffer _bb) { return GetRootAsAnimClip(_bb, new AnimClip()); }
  public static AnimClip GetRootAsAnimClip(ByteBuffer _bb, AnimClip obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AnimClip __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public CozmoAnim.Keyframes? Keyframes { get { int o = __p.__offset(6); return o != 0 ? (CozmoAnim.Keyframes?)(new CozmoAnim.Keyframes()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<CozmoAnim.AnimClip> CreateAnimClip(FlatBufferBuilder builder,
      StringOffset NameOffset = default(StringOffset),
      Offset<CozmoAnim.Keyframes> keyframesOffset = default(Offset<CozmoAnim.Keyframes>)) {
    builder.StartTable(2);
    AnimClip.AddKeyframes(builder, keyframesOffset);
    AnimClip.AddName(builder, NameOffset);
    return AnimClip.EndAnimClip(builder);
  }

  public static void StartAnimClip(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(0, NameOffset.Value, 0); }
  public static void AddKeyframes(FlatBufferBuilder builder, Offset<CozmoAnim.Keyframes> keyframesOffset) { builder.AddOffset(1, keyframesOffset.Value, 0); }
  public static Offset<CozmoAnim.AnimClip> EndAnimClip(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CozmoAnim.AnimClip>(o);
  }
};


}
